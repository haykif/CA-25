import mysql.connector
import time
import RPi.GPIO as GPIO
from mfrc522 import SimpleMFRC522
from gpiozero import MotionSensor

# üéØ Configuration du relais et du lecteur RFID
GPIO.setmode(GPIO.BCM)
RELAY_PIN = 18  # Modifier selon ton branchement
LED1 = 20
LED2 = 21
pir = MotionSensor(26)



GPIO.setup(RELAY_PIN, GPIO.OUT)
GPIO.setup(LED1, GPIO.OUT)
GPIO.setup(LED2, GPIO.OUT)

# üõ†Ô∏è Assurer que la g√¢che est ferm√©e au d√©marrage
GPIO.output(RELAY_PIN, GPIO.HIGH)  # La g√¢che reste ferm√©e par d√©faut

# Initialisation du lecteur RFID
reader = SimpleMFRC522()

# üìå Param√®tres de connexion √† la base de donn√©es
DB_CONFIG = {
    'user': 'dbca25',
    'password': 'admin25',
    'host': '173.21.1.164',
    'port': 887,
    'database': 'dbca25'
}

def activer_gache():
    """ Ouvre la g√¢che pendant 3 secondes puis la referme """
    print("‚úÖ Acc√®s accord√© ! Ouverture de la porte...")
    GPIO.output(LED1, GPIO.LOW)
    GPIO.output(RELAY_PIN, GPIO.LOW)  # Active le relais (ouvre la g√¢che)
    time.sleep(5)  # La g√¢che reste ouverte pendant 3 sec
    GPIO.output(RELAY_PIN, GPIO.HIGH)  # D√©sactive le relais (ferme la g√¢che)
    print("üîí Porte referm√©e.")

def verifier_acces(uid):
    """ V√©rifie si l'UID de la carte est autoris√© dans la base de donn√©es """
    try:
        conn = mysql.connector.connect(**DB_CONFIG)
        cursor = conn.cursor()
        cursor.execute("SELECT * FROM Carte WHERE RFID = %s", (uid,))
        carte = cursor.fetchone()

        if carte:
            print("‚úÖ Carte autoris√©e !")
            activer_gache()
            enregistrer_acces_autorisee(uid)  # Enregistre l'acc√®s en base
        else:
            print("‚ùå Acc√®s refus√© ! Carte inconnue.")
            enregistrer_acces_refusee(uid)

    except mysql.connector.Error as err:
        print(f"‚ö†Ô∏è Erreur MySQL : {err}")

    finally:
        if 'conn' in locals() and conn.is_connected():
            cursor.close()
            conn.close()
    return

def enregistrer_acces_autorisee(uid):
    """ Enregistre l'acc√®s r√©ussi dans la table Acces_log """
    try:
        conn = mysql.connector.connect(**DB_CONFIG)
        cursor = conn.cursor()

        date_entree = time.strftime('%Y-%m-%d %H:%M:%S')
        resultat = "Acc√®s autoris√©"
        etat_porte = "1"
        IdUser="1"

        sql = """
        INSERT INTO Acces_log (Date_heure_entree, Resultat_tentative, Presence, Etat_porte, RFID_utilise, UID)
        VALUES (%s, %s, %s, %s, %s, %s)
        """
        valeurs = (date_entree, resultat, True, etat_porte, uid, IdUser)


        GPIO.output(RELAY_PIN, GPIO.HIGH)
        GPIO.output(LED1, GPIO.LOW) #allumage de la led VERTE
        time.sleep(2)
        GPIO.output(LED1, GPIO.HIGH) #allumage de la led VERTE

        cursor.execute(sql, valeurs)
        conn.commit()
        print(f"üìå UID {uid} enregistr√© avec succ√®s dans Acces_log.")

    except mysql.connector.Error as err:
        print(f"‚ö†Ô∏è Erreur MySQL : {err}")

    finally:
        if 'conn' in locals() and conn.is_connected():
            cursor.close()
            conn.close()

def enregistrer_acces_refusee(uid):
    """ Enregistre l'acc√®s r√©ussi dans la table Acces_log """
    try:
        conn = mysql.connector.connect(**DB_CONFIG)
        cursor = conn.cursor()

        date_entree = time.strftime('%Y-%m-%d %H:%M:%S')
        resultat = "Acc√®s refus√©"
        etat_porte = "1"
        IdUser="1"

        sql = """
        INSERT INTO Acces_log (Date_heure_entree, Resultat_tentative, Presence, Etat_porte, RFID_utilise, IdUser)
        VALUES (%s, %s, %s, %s, %s, %s)
        """
        valeurs = (date_entree, resultat, True, etat_porte, uid, IdUser)
        GPIO.output(RELAY_PIN, GPIO.HIGH)
        GPIO.output(LED2, GPIO.LOW) #allumage de la led ROUGE
        time.sleep(2)
        GPIO.output(LED2, GPIO.HIGH) #allumage de la led ROUGE


        cursor.execute(sql, valeurs)
        conn.commit()
        print(f"üìå UID {uid} enregistr√© avec succ√®s dans Acces_log.")

    except mysql.connector.Error as err:
        print(f"‚ö†Ô∏è Erreur MySQL : {err}")

    finally:
        if 'conn' in locals() and conn.is_connected():
            cursor.close()
            conn.close()

def lire_carte():
    """ Lecture de la carte et v√©rification de l'acc√®s """
    global reader

    try:
        while True:
            print("üì° En attente d'une carte RFID...")
            card_id = reader.read_id()
            print(f"üì° Carte d√©tect√©e : {card_id}")
            verifier_acces(card_id)  # V√©rifier l'acc√®s dans la BDD
            time.sleep(2)# Pause avant la prochaine lecture
            reader = SimpleMFRC522()
            continue

    except KeyboardInterrupt:
        print("\nüõë Arr√™t du programme.")

    finally:
        GPIO.cleanup()
        print("üîß GPIO nettoy√©s.")

# Lancer la lecture
lire_carte()
